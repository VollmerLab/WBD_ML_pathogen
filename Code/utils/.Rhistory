values_from = estimate) %>%
relocate(`2017_S`, .after = `2016_W`) %>%
select(-contrast)
tank_out <- tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value)) %>%
mutate(treatment = str_c(time, str_replace_na(dose, ''), sep = '_') %>% str_remove('_$'),
estimate = str_c(round(estimate, 1), round(std.error, 2), sep = '+-'),
p.value = p.adjust(p.value, 'fdr'),
estimate = if_else(p.value < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-p.value) %>%
pivot_wider(names_from = treatment, values_from = estimate)
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id)
asv_table
write_csv(asv_table, '../../Results/table2_asv_table.csv')
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(everything(), ~str_replace_all(., '+-', '±')))
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(everything(), ~str_replace_all(., '\\+-', '±')))
asv_table
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', '±')))
asv_table
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± ')))
asv_table
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
select(-starts_with('pct'))
asv_table
write_csv(asv_table, '../../Results/table2_asv_table.csv')
write_csv(asv_table, '../../Results/table2_asv_table.csv')
write_csv(asv_table, '../../Results/Table2_asv_table.csv')
library(tidyverse)
taxonomy <- read_csv('../../intermediate_files/taxonomy.csv.gz',
show_col_types = FALSE) %>%
mutate(across(everything(), ~str_replace_na(., '')))
read_csv('../../Results/ASV_oraGSEA.csv.gz')
ml_model_out <- read_csv('../../Results/asv_importance.csv.gz', show_col_types = FALSE) %>%
left_join(taxonomy, ., by = 'asv_id') %>%
rename(FDR = p_adjust) %>%
# group_by(family, genus) %>%
# filter(any(FDR < 0.05)) %>%
# ungroup %>%
filter(FDR < 0.05) %>%
arrange(domain, phylum, class, order, family, genus, median_rank) %>%
select(-method, -alternative, -domain) %>%
relocate(asv_id, .after = 'genus') %>%
rename_with(~str_remove(., 'base_') %>%
str_replace_all(c('forest' = 'Random Forest',
'knn' = 'KNN',
'lasso' = 'LASSO',
'mlp' = 'MLP',
'null' = 'Null',
'pls' = 'PLS',
'svmLinear' = 'SVM'))) %>%
mutate(p.value = scales::pvalue(p.value, 0.0001),
FDR = scales::pvalue(FDR, 0.001))
ml_model_out
field_asv_models <- read_rds('../../intermediate_files/field_asv_models.rds.gz') %>%
filter(asv_id %in% asv_table$asv_id) %>%
rowwise %>%
mutate(pct_site = summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
filter(grp == 'site') %>%
pull(pct_var)) %>%
ungroup
field_asv_models <- read_rds('../../intermediate_files/field_asv_models.rds.gz') %>%
filter(asv_id %in% ml_model_out$asv_id) %>%
rowwise %>%
mutate(pct_site = summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
filter(grp == 'site') %>%
pull(pct_var)) %>%
ungroup
field_out <- select(field_asv_models, asv_id, pct_site, tp_contrasts) %>%
unnest(tp_contrasts) %>%
mutate(estimate = str_c(round(estimate, 1), round(SE, 2), sep = '+-'),
p.value = p.adjust(p.value, 'fdr'),
estimate = if_else(p.value < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-df, -t.ratio, -p.value) %>%
pivot_wider(names_from = c(year, season),
values_from = estimate) %>%
relocate(`2017_S`, .after = `2016_W`) %>%
select(-contrast)
tank_asv_models <- read_rds('../../intermediate_files/tank_asv_models.rds.gz') %>%
filter(asv_id %in% ml_model_out$asv_id)
tank_out <- tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value)) %>%
mutate(treatment = str_c(time, str_replace_na(dose, ''), sep = '_') %>% str_remove('_$'),
estimate = str_c(round(estimate, 1), round(std.error, 2), sep = '+-'),
p.value = p.adjust(p.value, 'fdr'),
estimate = if_else(p.value < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-p.value) %>%
pivot_wider(names_from = treatment, values_from = estimate)
library(emmeans)
tank_out <- tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value)) %>%
mutate(treatment = str_c(time, str_replace_na(dose, ''), sep = '_') %>% str_remove('_$'),
estimate = str_c(round(estimate, 1), round(std.error, 2), sep = '+-'),
p.value = p.adjust(p.value, 'fdr'),
estimate = if_else(p.value < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-p.value) %>%
pivot_wider(names_from = treatment, values_from = estimate)
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
select(-starts_with('pct'))
asv_table
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
select(-starts_with('pct')) %>%
select(-MLP:`Random Forest`) %>%
rename('Median Rank' = median_rank)
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
select(-starts_with('pct')) %>%
select(-MLP:-`Random Forest`) %>%
rename('Median Rank' = median_rank)
asv_table
write_csv(asv_table, '../../Results/Table2_asv_table.csv')
tank_out <- tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value)) %>%
mutate(treatment = str_c(time, str_replace_na(dose, ''), sep = '_') %>% str_remove('_$'),
estimate = str_c(round(estimate, 1), round(std.error, 2), sep = '+-'),
# p.value = p.adjust(p.value, 'fdr'),
estimate = if_else(p.value < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-p.value) %>%
pivot_wider(names_from = treatment, values_from = estimate)
tank_out <- tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value)) %>%
mutate(treatment = str_c(time, str_replace_na(dose, ''), sep = '_') %>% str_remove('_$'),
estimate = str_c(round(estimate, 1), round(std.error, 2), sep = '+-'),
# p.value = p.adjust(p.value, 'fdr'),
estimate = if_else(p.value < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-contains('p.value')) %>%
pivot_wider(names_from = treatment, values_from = estimate)
tank_out
field_out <- select(field_asv_models, asv_id, pct_site, tp_contrasts) %>%
unnest(tp_contrasts) %>%
mutate(estimate = str_c(round(estimate, 1), round(SE, 2), sep = '+-'),
# p.value = p.adjust(p.value, 'fdr'),
estimate = if_else(p.value < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-df, -t.ratio, -contains('p.value')) %>%
pivot_wider(names_from = c(year, season),
values_from = estimate) %>%
relocate(`2017_S`, .after = `2016_W`) %>%
select(-contrast)
asv_table <- full_join(ml_model_out,
field_out,
by = 'asv_id') %>%
left_join(tank_out,
by = 'asv_id') %>%
mutate(across(starts_with('pct'), ~scales::percent(., 1))) %>%
select(-statistic, -p.value,
-phylum:-order) %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
select(-starts_with('pct')) %>%
select(-MLP:-`Random Forest`) %>%
rename('Median Rank' = median_rank)
write_csv(asv_table, '../../Results/Table2_asv_table.csv')
asv_table
tank_out
write_csv(asv_table, '../../Results/Table2_asv_table.csv')
tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value))
tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value)) %>%
filter(asv_id %in% c('ASV8', 'ASV30'))
tank_mid <- tank_asv_models %>%
# filter(!asv_id %in% c('ASV700', 'ASV15', 'ASV49')) %>%
rowwise(asv_id) %>%
reframe(summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
select(grp, pct_var) %>%
pivot_wider(names_from = 'grp',
values_from = 'pct_var') %>%
select(-Residual) %>%
rename_with(~str_c('pct_', .)),
emmeans(model, ~health | (exp_dis + exp_hea)) %>%
contrast('revpairwise') %>%
broom::tidy(conf.int = TRUE) %>%
filter(!(exp_dis == 1 & exp_hea == 1)) %>%
mutate(time = if_else(exp_dis == 0 & exp_hea == 0, 'Before', 'After'),
dose = case_when(exp_dis == 1 ~ 'Disease',
exp_hea == 1 ~ 'Healthy',
TRUE ~ NA_character_)) %>%
select(time, dose, estimate, std.error, p.value))
tank_mid
filter(tank_mid, asv_id == 'ASV40')
filter(tank_mid, asv_id == 'ASV40')
filter(tank_mid, asv_id == 'ASV40') %>%
select(time:p.value)
field_out
field_asv_models
#### Random Numbers ####
filter(field_asv_models, asv_id == 'ASV40')
#### Random Numbers ####
filter(field_asv_models, asv_id == 'ASV40') %>%
select(model) %>%
pull(model)
#### Random Numbers ####
filter(field_asv_models, asv_id == 'ASV40') %>%
select(model) %>%
pull(model) %>%
emmeans(~health)
#### Random Numbers ####
filter(field_asv_models, asv_id == 'ASV40') %>%
select(model) %>%
pull(model) %>%
pluck(1) %>%
emmeans(~health)
#### Random Numbers ####
filter(field_asv_models, asv_id == 'ASV40') %>%
select(model) %>%
pull(model) %>%
pluck(1) %>%
emmeans(~health) %>%
contrast('pairwise')
mean(c(-4.3, -3.1, -1.6, -4.3))
field_asv_models
#### Random Numbers ####
filter(field_asv_models, asv_id %in% c('ASV15', 'ASV49', 'ASV700'))
#### Random Numbers ####
filter(field_asv_models, asv_id %in% c('ASV15', 'ASV49', 'ASV700')) %>%
select(asv_id, tp_contrasts) %>%
unnest(tp_contrasts)
#### Random Numbers ####
filter(field_asv_models, asv_id %in% c('ASV15', 'ASV49', 'ASV700')) %>%
select(asv_id, tp_contrasts) %>%
unnest(tp_contrasts) %>%
filter(p.value > 0.05)
taxonomy
filter(taxonomy, asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40'))
filter(taxonomy, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40'))
ml_model_out
filter(ml_model_out, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40'))
filter(ml_model_out, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40')) %>%
seelct(family, genus)
filter(ml_model_out, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40')) %>%
count(family, genus)
str_c('ASV', c(25, 322, 361, 26, 8))
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(time:p.value)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(time:p.value) %>%
filter(p.value < 0.05)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(asv_id, time:p.value) %>%
filter(p.value < 0.05)
filter(taxonomy, asv_id == 'ASV322')
filter(taxonomy, asv_id == 'ASV322') %>%
select(family, genus)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(asv_id, time:p.value) %>%
filter(p.value < 0.05)
filter(taxonomy, asv_id == 'ASV8') %>%
select(family, genus)
filter(taxonomy, asv_id %in% c('ASV26', 'ASV361', 'ASV25')) %>%
select(family, genus)
filter(taxonomy, asv_id %in% c('ASV26', 'ASV361', 'ASV25')) %>%
select(family, genus, asv_id)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(asv_id, time:p.value) %>%
filter(p.value < 0.05)
