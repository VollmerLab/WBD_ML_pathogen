pull(model) %>%
pluck(1) %>%
emmeans(~health)
#### Random Numbers ####
filter(field_asv_models, asv_id == 'ASV40') %>%
select(model) %>%
pull(model) %>%
pluck(1) %>%
emmeans(~health) %>%
contrast('pairwise')
mean(c(-4.3, -3.1, -1.6, -4.3))
field_asv_models
#### Random Numbers ####
filter(field_asv_models, asv_id %in% c('ASV15', 'ASV49', 'ASV700'))
#### Random Numbers ####
filter(field_asv_models, asv_id %in% c('ASV15', 'ASV49', 'ASV700')) %>%
select(asv_id, tp_contrasts) %>%
unnest(tp_contrasts)
#### Random Numbers ####
filter(field_asv_models, asv_id %in% c('ASV15', 'ASV49', 'ASV700')) %>%
select(asv_id, tp_contrasts) %>%
unnest(tp_contrasts) %>%
filter(p.value > 0.05)
taxonomy
filter(taxonomy, asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40'))
filter(taxonomy, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40'))
ml_model_out
filter(ml_model_out, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40'))
filter(ml_model_out, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40')) %>%
seelct(family, genus)
filter(ml_model_out, !asv_id %in% c('ASV15', 'ASV49', 'ASV700', 'ASV40')) %>%
count(family, genus)
str_c('ASV', c(25, 322, 361, 26, 8))
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(time:p.value)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(time:p.value) %>%
filter(p.value < 0.05)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(asv_id, time:p.value) %>%
filter(p.value < 0.05)
filter(taxonomy, asv_id == 'ASV322')
filter(taxonomy, asv_id == 'ASV322') %>%
select(family, genus)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(asv_id, time:p.value) %>%
filter(p.value < 0.05)
filter(taxonomy, asv_id == 'ASV8') %>%
select(family, genus)
filter(taxonomy, asv_id %in% c('ASV26', 'ASV361', 'ASV25')) %>%
select(family, genus)
filter(taxonomy, asv_id %in% c('ASV26', 'ASV361', 'ASV25')) %>%
select(family, genus, asv_id)
filter(tank_mid, asv_id %in% str_c('ASV', c(25, 322, 361, 26, 8))) %>%
select(asv_id, time:p.value) %>%
filter(p.value < 0.05)
library(tidyverse)
#### Redo with BCLA ####
read_csv('../../intermediate_files/all_asvs.fasta.blca.out')
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim ' \t')
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = ' \t')
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t')
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
colnames = c('asv_id', 'taxonom'))
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'))
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE)
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE)
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;'))
#### Redo with BCLA ####
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;'),
.keep = 'unused')
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum'),
.keep = 'unused')
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class'),
.keep = 'unused')
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE)
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+'),
.keep = 'unused')
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+'),
.keep = 'unused')
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused')
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused') %>% View
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused')
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused') %>%
select(asv_id, superkingdom, phylum)
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused') %>%
select(asv_id, superkingdom, phylum) %>%
mutate(across(-asv_id, ~str_extract(., ';.*$') %>% str_remove(';') %>% parse_number()))
?across
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused') %>%
select(asv_id, superkingdom, phylum) %>%
mutate(across(-asv_id, ~str_extract(., ';.*$') %>% str_remove(';') %>% parse_number(), .names = '{.col}_confidence'))
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused') %>%
select(asv_id, superkingdom, phylum) %>%
mutate(across(-asv_id, ~str_extract(., ';.*$') %>% str_remove(';') %>%
parse_number(), .names = '{.col}_confidence'),
across(where(is.character), ~str_remove(., ';.*$')))
read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused') %>%
# select(asv_id, superkingdom, phylum) %>%
mutate(across(-asv_id, ~str_extract(., ';.*$') %>% str_remove(';') %>%
parse_number(), .names = '{.col}_confidence'),
across(where(is.character), ~str_remove(., ';.*$')))
load('~/../Downloads/decipherOut_50pct.RData')
ranks <- c("domain", "phylum", "class", "order", "family", "genus", "species")
new_taxonomy <- t(sapply(ids, function(x) {
m <- match(ranks, x$rank)
taxa <- x$taxon[m]
taxa[startsWith(taxa, "unclassified_")] <- NA
taxa
}))
colnames(new_taxonomy) <- ranks
new_taxonomy
as_tibble(new_taxonomy, rownames = 'asv_id')
new_taxonomy <- read_delim('../../intermediate_files/all_asvs.fasta.blca.out', delim = '\t',
col_names = c('asv_id', 'taxonomy'), show_col_types = FALSE) %>%
mutate(superkingdom = str_extract(taxonomy, 'superkingdom:.*;[0-9\\.]+;phylum') %>% str_remove_all('superkingdom:|;phylum'),
phylum = str_extract(taxonomy, 'phylum:.*;[0-9\\.]+;class') %>% str_remove_all('phylum:|;class'),
class = str_extract(taxonomy, 'class:.*;[0-9\\.]+;order') %>% str_remove_all('class:|;order'),
order = str_extract(taxonomy, 'order:.*;[0-9\\.]+;family') %>% str_remove_all('order:|;family'),
family = str_extract(taxonomy, 'family:.*;[0-9\\.]+;genus') %>% str_remove_all('family:|;genus'),
genus = str_extract(taxonomy, 'genus:.*;[0-9\\.]+;species') %>% str_remove_all('genus:|;species'),
species = str_extract(taxonomy, 'species:.*;[0-9\\.]+') %>% str_remove_all('species:'),
.keep = 'unused') %>%
rename(domain = superkingdom) %>%
# select(asv_id, superkingdom, phylum) %>%
mutate(across(-asv_id, ~str_extract(., ';.*$') %>% str_remove(';') %>%
parse_number(), .names = '{.col}_confidence'),
across(where(is.character), ~str_remove(., ';.*$')))
new_taxonomy
write_csv(new_taxonomy, '../intermediate_files/update_taxonomy.csv')
write_csv(new_taxonomy, '../../intermediate_files/update_taxonomy.csv')
library(tidyverse)
library(emmeans)
taxonomy <- read_csv('../../intermediate_files/taxonomy.csv.gz',
show_col_types = FALSE) %>%
mutate(across(everything(), ~str_replace_na(., '')))
read_csv('../../Results/ASV_oraGSEA.csv.gz')
ml_model_out <- read_csv('../../Results/asv_importance.csv.gz', show_col_types = FALSE) %>%
left_join(taxonomy, ., by = 'asv_id') %>%
rename(FDR = p_adjust) %>%
# group_by(family, genus) %>%
# filter(any(FDR < 0.05)) %>%
# ungroup %>%
filter(FDR < 0.05) %>%
arrange(domain, phylum, class, order, family, genus, median_rank) %>%
select(-contains('method'), -contains('alternative'), -contains('domain')) %>%
relocate(asv_id, .after = 'genus') %>%
rename_with(~str_remove(., 'base_') %>%
str_replace_all(c('forest' = 'Random Forest',
'knn' = 'KNN',
'lasso' = 'LASSO',
'mlp' = 'MLP',
'null' = 'Null',
'pls' = 'PLS',
'svmLinear' = 'SVM'))) %>%
mutate(#p.value = scales::pvalue(p.value, 0.0001),
FDR = scales::pvalue(FDR, 0.001)) %>%
arrange(median_rank)
field_asv_models <- read_rds('../../intermediate_files/field_asv_models.rds.gz') %>%
filter(asv_id %in% ml_model_out$asv_id) %>%
rowwise %>%
mutate(pct_site = summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
filter(grp == 'site') %>%
pull(pct_var)) %>%
ungroup
field_out <- select(field_asv_models, asv_id, tp_contrasts) %>%
unnest(tp_contrasts) %>%
group_by(year, season) %>%
mutate(fdr = p.adjust(p.value, 'fdr')) %>%
ungroup %>%
mutate(estimate = str_c(round(estimate, 1), round(SE, 2), sep = '+-'),
estimate = if_else(fdr < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-df, -t.ratio, -contains('p.value')) %>%
pivot_wider(names_from = c(year, season),
values_from = estimate) %>%
relocate(`2017_S`, .after = `2016_W`) %>%
select(-contrast)
tank_out <- read_rds('../../intermediate_files/tank_asv_models.rds.gz') %>%
filter(asv_id %in% ml_model_out$asv_id) %>%
inner_join(mutate(field_asv_models, across(contains('p.within'), ~p.adjust(., method = 'fdr'))) %>%
filter_at(vars(contains('p.within')), all_vars(. < alpha)) %>%
select(asv_id),
by = 'asv_id') %>%
select(asv_id, tank_posthoc) %>%
unnest(tank_posthoc) %>%
group_by(contrast) %>%
mutate(fdr = p.adjust(p.value, 'fdr')) %>%
ungroup %>%
mutate(estimate = str_c(round(estimate, 1), round(std.error, 2), sep = '+-'),
estimate = if_else(fdr < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(asv_id, contrast, estimate) %>%
pivot_wider(names_from = c(contrast),
values_from = estimate) %>%
mutate(likely_type = case_when(str_detect(DDvDH, '\\*') &
str_detect(DvH, '\\*') &
str_detect(PostvPreD, '\\*') ~ 'Pathogen',
str_detect(DvN, '\\*') &
str_detect(PostvPreD, '\\*') ~ 'Opportunist',
TRUE ~ 'Commensalist'))
alpha <- 0.05
ml_model_out <- read_csv('../../Results/asv_importance.csv.gz', show_col_types = FALSE) %>%
left_join(taxonomy, ., by = 'asv_id') %>%
rename(FDR = p_adjust) %>%
# group_by(family, genus) %>%
# filter(any(FDR < 0.05)) %>%
# ungroup %>%
filter(FDR < 0.05) %>%
arrange(domain, phylum, class, order, family, genus, median_rank) %>%
select(-contains('method'), -contains('alternative'), -contains('domain')) %>%
relocate(asv_id, .after = 'genus') %>%
rename_with(~str_remove(., 'base_') %>%
str_replace_all(c('forest' = 'Random Forest',
'knn' = 'KNN',
'lasso' = 'LASSO',
'mlp' = 'MLP',
'null' = 'Null',
'pls' = 'PLS',
'svmLinear' = 'SVM'))) %>%
mutate(#p.value = scales::pvalue(p.value, 0.0001),
FDR = scales::pvalue(FDR, 0.001)) %>%
arrange(median_rank)
field_asv_models <- read_rds('../../intermediate_files/field_asv_models.rds.gz') %>%
filter(asv_id %in% ml_model_out$asv_id) %>%
rowwise %>%
mutate(pct_site = summary(model)$varcor %>%
as_tibble() %>%
mutate(pct_var = vcov / sum(vcov)) %>%
filter(grp == 'site') %>%
pull(pct_var)) %>%
ungroup
field_out <- select(field_asv_models, asv_id, tp_contrasts) %>%
unnest(tp_contrasts) %>%
group_by(year, season) %>%
mutate(fdr = p.adjust(p.value, 'fdr')) %>%
ungroup %>%
mutate(estimate = str_c(round(estimate, 1), round(SE, 2), sep = '+-'),
estimate = if_else(fdr < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(-df, -t.ratio, -contains('p.value')) %>%
pivot_wider(names_from = c(year, season),
values_from = estimate) %>%
relocate(`2017_S`, .after = `2016_W`) %>%
select(-contrast)
tank_out <- read_rds('../../intermediate_files/tank_asv_models.rds.gz') %>%
filter(asv_id %in% ml_model_out$asv_id) %>%
inner_join(mutate(field_asv_models, across(contains('p.within'), ~p.adjust(., method = 'fdr'))) %>%
filter_at(vars(contains('p.within')), all_vars(. < alpha)) %>%
select(asv_id),
by = 'asv_id') %>%
select(asv_id, tank_posthoc) %>%
unnest(tank_posthoc) %>%
group_by(contrast) %>%
mutate(fdr = p.adjust(p.value, 'fdr')) %>%
ungroup %>%
mutate(estimate = str_c(round(estimate, 1), round(std.error, 2), sep = '+-'),
estimate = if_else(fdr < 0.05, str_c(estimate, ' *'), estimate),
.keep = 'unused') %>%
select(asv_id, contrast, estimate) %>%
pivot_wider(names_from = c(contrast),
values_from = estimate) %>%
mutate(likely_type = case_when(str_detect(DDvDH, '\\*') &
str_detect(DvH, '\\*') &
str_detect(PostvPreD, '\\*') ~ 'Pathogen',
str_detect(DvN, '\\*') &
str_detect(PostvPreD, '\\*') ~ 'Opportunist',
TRUE ~ 'Commensalist'))
read_csv('../../intermediate_files/update_taxonomy.csv')
taxonomy <- read_csv('../../intermediate_files/taxonomy.csv.gz',
show_col_types = FALSE) %>%
mutate(across(everything(), ~str_replace_na(., '')),
show_col_types = FALSE)
taxonomy <- read_csv('../../intermediate_files/taxonomy.csv.gz',
show_col_types = FALSE) %>%
mutate(across(everything(), ~str_replace_na(., '')))
read_csv('../../intermediate_files/update_taxonomy.csv',
show_col_types = FALSE)
asv_table
asv_table <- select(ml_model_out, phylum:genus,
asv_id, median_rank, FDR) %>%
full_join(field_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
left_join(tank_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
rename('Median Rank' = median_rank) %>%
relocate(`PostvPreD`, .after = `2017_S`) %>%
relocate(`PostvPreH`, .after = `2017_S`) %>%
relocate(`DvN`, .after = `PostvPreD`)
asv_table
asv_table <- select(ml_model_out, phylum:species,
asv_id, median_rank, FDR) %>%
full_join(field_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
left_join(tank_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
rename('Median Rank' = median_rank) %>%
relocate(`PostvPreD`, .after = `2017_S`) %>%
relocate(`PostvPreH`, .after = `2017_S`) %>%
relocate(`DvN`, .after = `PostvPreD`)
asv_table
select(ml_model_out, phylum:species,
asv_id, median_rank, FDR)
asv_table <- select(ml_model_out, phylum:species,
asv_id, median_rank, FDR) %>%
relocate(`asv_id`, .after = `species`) %>%
full_join(field_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
left_join(tank_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
Species = Species,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
rename('Median Rank' = median_rank) %>%
relocate(`PostvPreD`, .after = `2017_S`) %>%
relocate(`PostvPreH`, .after = `2017_S`) %>%
relocate(`DvN`, .after = `PostvPreD`)
asv_table <- select(ml_model_out, phylum:species,
asv_id, median_rank, FDR) %>%
relocate(`asv_id`, .after = `species`) %>%
full_join(field_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
left_join(tank_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
Species = species,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
rename('Median Rank' = median_rank) %>%
relocate(`PostvPreD`, .after = `2017_S`) %>%
relocate(`PostvPreH`, .after = `2017_S`) %>%
relocate(`DvN`, .after = `PostvPreD`)
asv_table
asv_table
taxonom_confidence
taxonom_confidence <- read_csv('../../intermediate_files/update_taxonomy.csv',
show_col_types = FALSE)
taxonom_confidence
select(ml_model_out, phylum:species,
asv_id, median_rank, FDR) %>%
relocate(`asv_id`, .after = `species`) %>%
left_join(taxonom_confidence,
by = 'asv_out')
select(ml_model_out, phylum:species,
asv_id, median_rank, FDR) %>%
relocate(`asv_id`, .after = `species`) %>%
left_join(select(taxonom_confidence, asv_id, ends_with('confidence')),
by = 'asv_id')
asv_table <- select(ml_model_out, phylum:species,
asv_id, median_rank, FDR) %>%
relocate(`asv_id`, .after = `species`) %>%
left_join(select(taxonom_confidence, asv_id, ends_with('confidence')),
by = 'asv_id') %>%
relocate(`asv_id`, median_rank, FDR, .after = `species_confidence`) %>%
full_join(field_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
left_join(tank_out,
by = 'asv_id') %>%
relocate(`2016_W`, .before = `2016_S`) %>%
relocate(`2017_W`, .before = `2017_S`) %>%
rename(Family = family,
Genus = genus,
Species = species,
ID = asv_id) %>%
mutate(across(where(is.character), ~str_replace_all(., '\\+-', ' ± '))) %>%
rename('Median Rank' = median_rank) %>%
relocate(`PostvPreD`, .after = `2017_S`) %>%
relocate(`PostvPreH`, .after = `2017_S`) %>%
relocate(`DvN`, .after = `PostvPreD`)
asv_table
View(asv_table)
write_csv(asv_table, '../../Results/Table45_asv_table.csv')
