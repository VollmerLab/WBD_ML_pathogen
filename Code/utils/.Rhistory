labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
ggplot(aes(y = taxon_name, x = shap, #, shape = health
fill = value)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_quasirandom(aes(group = 1), groupOnX = FALSE, dodge.width = 1,
shape = 'circle filled') +
scale_fill_gradient2(midpoint = 0,
high = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[1],
low = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[2]) +
# guides(shape = guide_legend(override.aes = list(size = 4))) +
labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
ggplot(aes(y = taxon_name, x = shap, #, shape = health
fill = value)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_quasirandom(aes(group = 1), groupOnX = FALSE, dodge.width = 1,
shape = 'circle filled') +
scale_fill_gradient2(midpoint = 0,
high = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[1],
low = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[2],
labels = c(10, 5, 0, 5, 10)) +
# guides(shape = guide_legend(override.aes = list(size = 4))) +
labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
ggplot(aes(y = taxon_name, x = shap, #, shape = health
fill = value)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_quasirandom(aes(group = 1), groupOnX = FALSE, dodge.width = 1,
shape = 'circle filled') +
scale_fill_gradient2(midpoint = 0,
high = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[1],
low = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[2],
labels = c('Healthy', '5', '0', '5', 'Diseased')) +
# guides(shape = guide_legend(override.aes = list(size = 4))) +
labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
ggplot(aes(y = taxon_name, x = shap, #, shape = health
fill = value)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_quasirandom(aes(group = 1), groupOnX = FALSE, dodge.width = 1,
shape = 'circle filled') +
scale_fill_gradient2(midpoint = 0,
high = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[1],
low = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[2],
labels = c('Diseased', '5', '0', '5', 'Healthy')) +
# guides(shape = guide_legend(override.aes = list(size = 4))) +
labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A')
#### Shap Plots ####
shap_plot <- asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
ggplot(aes(y = taxon_name, x = shap, #, shape = health
fill = value)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_quasirandom(aes(group = 1), groupOnX = FALSE, dodge.width = 1,
shape = 'circle filled') +
scale_fill_gradient2(midpoint = 0,
high = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[1],
low = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[2],
labels = c('Diseased', '5', '0', '5', 'Healthy')) +
# guides(shape = guide_legend(override.aes = list(size = 4))) +
labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A')
#### Tank Plot ####
tank_plot <- tank_models %>%
filter(!contrast %in% c('Outcome', 'PostvPreH', 'DHvNH',
'Post (Diseased / Control)',
'Diseased (Post / Pre)')) %>%
mutate(contrast = case_when(contrast == 'Post (Diseased / Healthy)' ~ 'Outcome',
contrast == 'Diseased (Post / Pre)' ~ 'Time',
TRUE ~ contrast),
contrast = factor(contrast, levels = c('Field', 'Exposure', 'Outcome')),
direction_sig = case_when(fdr > alpha ~ 'Neither',
estimate > 0 ~ 'Diseased',
estimate < 0 ~ 'Healthy'),
direction_sig = factor(direction_sig, levels = c('Healthy', 'Neither', 'Diseased'))) %>%
ggplot(aes(y = taxon_name, x = estimate, shape = contrast,
fill = direction_sig)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_errorbar(aes(xmin = conf.low, xmax = conf.high),
width = 0.1, position = position_dodge(0.5),
show.legend = FALSE) +
geom_point(position = position_dodge(0.5)) +
guides(fill = guide_legend(override.aes = list(shape = 'circle filled', size = 4)),
shape = guide_legend(override.aes = list(size = 4, fill = 'black'))) +
scale_fill_manual(values = set_names(c('white',
wesanderson::wes_palette("Zissou1", 2,
type = "continuous")),
c('Neither', 'Healthy', 'Diseased')),
breaks = c('Healthy', 'Diseased'), drop = FALSE) +
scale_shape_manual(values = c('Field' = 'circle filled',
'Exposure' = 'square filled',
'Outcome' = 'diamond filled'),
drop = FALSE) +
labs(x = 'Tank log<sub>2</sub>(D/H)',
y = NULL,
fill = 'Disease\nAssociation',
shape = 'Effect') +
theme_classic() +
theme(axis.title.x = element_markdown(),
legend.title = element_text(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
tank_plot
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A')
asv_shaps <- read_csv('../../intermediate_files/model_shaps.csv.gz', show_col_types = FALSE) %>%
group_by(wflow_id) %>%
# mutate(across(ends_with('value'), ~scale(.)[,1])) %>%
mutate(across(ends_with('shap'), ~scale(.)[,1])) %>%
ungroup %>%
filter(wflow_id %in% model_list) %>%
pivot_longer(starts_with('ASV'),
names_to = c('asv_id', '.value'),
names_pattern = '(.*)_(.*)') %>%
filter(asv_id %in% as.character(asv_rankings$asv_id)) %>%
mutate(asv_id = factor(asv_id, levels = levels(asv_rankings$asv_id))) %>%
left_join(select(asv_rankings, asv_id, taxon_name),
by = 'asv_id')
asv_shaps <- read_csv('../../intermediate_files/model_shaps.csv.gz', show_col_types = FALSE) %>%
group_by(wflow_id) %>%
# mutate(across(ends_with('value'), ~scale(.)[,1])) %>%
# mutate(across(ends_with('shap'), ~scale(.)[,1])) %>%
ungroup %>%
filter(wflow_id %in% model_list) %>%
pivot_longer(starts_with('ASV'),
names_to = c('asv_id', '.value'),
names_pattern = '(.*)_(.*)') %>%
filter(asv_id %in% as.character(asv_rankings$asv_id)) %>%
mutate(asv_id = factor(asv_id, levels = levels(asv_rankings$asv_id))) %>%
left_join(select(asv_rankings, asv_id, taxon_name),
by = 'asv_id')
#### Shap Plots ####
shap_plot <- asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
ggplot(aes(y = taxon_name, x = shap, #, shape = health
fill = value)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_quasirandom(aes(group = 1), groupOnX = FALSE, dodge.width = 1,
shape = 'circle filled') +
scale_fill_gradient2(midpoint = 0,
high = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[1],
low = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[2],
labels = c('Diseased', '5', '0', '5', 'Healthy')) +
# guides(shape = guide_legend(override.aes = list(size = 4))) +
labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A')
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topright')
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft')
?theme
patchwork:::complete_guide_theme()
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'top')
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft')
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 0))
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1))
rank_plot
shap_plot
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft')
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft',
axis.text.y = element_blank())
rank_plot +
theme(axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank())
#### Combined Plots ####
tmp <- (rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft',
axis.text.y = element_blank())
(rank_plot +
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())) + tmp
?plot_layout
(rank_plot +
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())) + tmp
(rank_plot +
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())) + tmp +
plot_layout(tag_level = 'keep')
#### Combined Plots ####
tmp <- (rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft')
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft')
#### Combined Plots ####
tmp <- (rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft')
tmp[[1]]
str(tmp)
attr(tmp)
tmp
asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop')
asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
group_by(taxon_name) %>%
summarise(mean_shap = mean(shap),
se_shap = sd(shap) / sqrt(n())) %>%
ggplot(aes(y = taxon_name, x = mean_shap)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_point()
#### Shap Plots ####
shap_plot <- asv_shaps %>%
mutate(value = value - min(value), .by = c(asv_id, wflow_id)) %>%
mutate(value = if_else(shap < 0, value, -1 * value),
value = case_when(value > 10 ~ 10,
value < -10 ~ -10,
TRUE ~ value)) %>%
# filter(wflow_id == 'base_mlp') %>%
mutate(health = case_when(health == 'D' ~ 'Diseased',
health == 'H' ~ 'Healthy')) %>%
group_by(sample_id, asv_id, health, value, taxon_name) %>%
summarise(shap = mean(shap),
.groups = 'drop') %>%
ggplot(aes(y = taxon_name, x = shap, #, shape = health
fill = value)) +
geom_vline(xintercept = 0, linetype = 'dashed') +
geom_quasirandom(aes(group = 1), groupOnX = FALSE, dodge.width = 1,
shape = 'circle filled') +
scale_fill_gradient2(midpoint = 0,
high = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[1],
low = wesanderson::wes_palette("Zissou1", 2, type = "continuous")[2],
labels = c('Diseased', '5', '0', '5', 'Healthy')) +
# guides(shape = guide_legend(override.aes = list(size = 4))) +
labs(fill = 'Normalized<br>log<sub>2</sub>(CPM)',
shape = 'Disease<br>State',
y = NULL,
x = 'SHAP') +
theme_classic() +
theme(legend.title = element_markdown(colour = 'black', size = 14),
legend.text = element_text(colour = 'black', size = 10),
panel.background = element_rect(colour = 'black'),
axis.text = element_text(colour = 'black', size = 10),
axis.title = element_text(colour = 'black', size = 14),
axis.text.y = element_markdown())
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft')
tmp[[1]][[1]]
tmp[[1]]
str(tmp)
tst <- str(tmp)
tst$t
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(-Inf, Inf))
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(-Inf, Inf),
plot.tag = element_text(hjust = 0, vjust = 1))
#### Combined Plots ####
tmp <- (rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(-Inf, Inf),
plot.tag = element_text(hjust = 0, vjust = 1))
tmp
#### Combined Plots ####
tmp <- (rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(hjust = 0, vjust = 1))
tmp
#### Combined Plots ####
tmp <- (rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = 'topleft',
plot.tag = element_text(hjust = 0, vjust = 1))
tmp
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c("panel", 'topleft'))
#### Combined Plots ####
(rank_plot + shap_plot + field_plot + tank_plot) +
plot_layout(nrow = 1, guides = 'collect', axes = 'collect_y') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c("panel"))
